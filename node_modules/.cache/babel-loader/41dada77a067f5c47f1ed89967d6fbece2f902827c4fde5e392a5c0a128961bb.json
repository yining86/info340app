{"ast":null,"code":"import { random } from \"lodash\";\nimport { players } from \"./playerlist\";\nexport function generatePlayers(playerList) {\n  // grab 5 random players from playerlist\n  let randomPlayers = [];\n  for (let i = 0; i < 5; i++) {\n    randomPlayers.push(players[Math.floor(Math.random() * players.length)]);\n  }\n\n  // make an array of unique teams\n  const uniqueTeams = new Set();\n  players.forEach(player => {\n    const team = player['team'];\n    uniqueTeams.add(team);\n  });\n  const uniqueTeamsArray = Array.from(uniqueTeams);\n\n  // create a random answer pool for each player\n  function createAnswerPool(playerObj, teamArray) {\n    let answerPool = [];\n    answerPool.push(playerObj.team);\n    for (let i = 0; i < 3; i++) {\n      answerPool.push(teamArray[Math.floor(Math.random() * teamArray.length)]);\n    }\n    let currIndex = answerPool.length;\n    while (currIndex != 0) {\n      let randomIndex = Math.floor(Math.random() * currIndex);\n      currIndex--;\n      [answerPool[currIndex], answerPool[currIndex]] = [answerPool[randomIndex], answerPool[currIndex]];\n    }\n    return answerPool;\n  }\n  const p1AnswerPool = createAnswerPool(randomPlayers[0], uniqueTeamsArray);\n  const p2AnswerPool = createAnswerPool(randomPlayers[1], uniqueTeamsArray);\n  const p3AnswerPool = createAnswerPool(randomPlayers[2], uniqueTeamsArray);\n  const p4AnswerPool = createAnswerPool(randomPlayers[3], uniqueTeamsArray);\n  const p5AnswerPool = createAnswerPool(randomPlayers[4], uniqueTeamsArray);\n  Object.assign(randomPlayers[0], {\n    answerPool: p1AnswerPool\n  });\n  Object.assign(randomPlayers[1], {\n    answerPool: p2AnswerPool\n  });\n  Object.assign(randomPlayers[2], {\n    answerPool: p3AnswerPool\n  });\n  Object.assign(randomPlayers[3], {\n    answerPool: p4AnswerPool\n  });\n  Object.assign(randomPlayers[4], {\n    answerPool: p5AnswerPool\n  });\n  return randomPlayers;\n}\nconst randomPlayers = generatePlayers({\n  players\n});\nexport const quizQuestions = [{\n  imgSrc: randomPlayers[0].imgSrc,\n  name: randomPlayers[0].name,\n  question: \"Which team does \" + randomPlayers[0].name + \" play for?\",\n  a1: randomPlayers[0].answerPool[0],\n  a2: randomPlayers[0].answerPool[1],\n  a3: randomPlayers[0].answerPool[2],\n  a4: randomPlayers[0].answerPool[3],\n  ans: randomPlayers[0].answerPool.indexOf(randomPlayers[0].team)\n}, {\n  imgSrc: randomPlayers[1].imgSrc,\n  name: randomPlayers[1].name,\n  question: \"Which team does \" + randomPlayers[1].name + \" play for?\",\n  a1: randomPlayers[1].answerPool[0],\n  a2: randomPlayers[1].answerPool[1],\n  a3: randomPlayers[1].answerPool[2],\n  a4: randomPlayers[1].answerPool[3],\n  ans: randomPlayers[1].answerPool.indexOf(randomPlayers[1].team)\n}, {\n  imgSrc: randomPlayers[2].imgSrc,\n  name: randomPlayers[2].name,\n  question: \"Which team does \" + randomPlayers[2].name + \" play for?\",\n  a1: randomPlayers[2].answerPool[0],\n  a2: randomPlayers[2].answerPool[1],\n  a3: randomPlayers[2].answerPool[2],\n  a4: randomPlayers[2].answerPool[3],\n  ans: randomPlayers[2].answerPool.indexOf(randomPlayers[2].team)\n}, {\n  imgSrc: randomPlayers[3].imgSrc,\n  name: randomPlayers[3].name,\n  question: \"Which team does \" + randomPlayers[3].name + \" play for?\",\n  a1: randomPlayers[3].answerPool[0],\n  a2: randomPlayers[3].answerPool[1],\n  a3: randomPlayers[3].answerPool[2],\n  a4: randomPlayers[3].answerPool[3],\n  ans: randomPlayers[3].answerPool.indexOf(randomPlayers[3].team)\n}, {\n  imgSrc: randomPlayers[4].imgSrc,\n  name: randomPlayers[4].name,\n  question: \"Which team does \" + randomPlayers[4].name + \" play for?\",\n  a1: randomPlayers[4].answerPool[0],\n  a2: randomPlayers[4].answerPool[1],\n  a3: randomPlayers[4].answerPool[2],\n  a4: randomPlayers[4].answerPool[3],\n  ans: randomPlayers[4].answerPool.indexOf(randomPlayers[4].team)\n}];","map":{"version":3,"names":["random","players","generatePlayers","playerList","randomPlayers","i","push","Math","floor","length","uniqueTeams","Set","forEach","player","team","add","uniqueTeamsArray","Array","from","createAnswerPool","playerObj","teamArray","answerPool","currIndex","randomIndex","p1AnswerPool","p2AnswerPool","p3AnswerPool","p4AnswerPool","p5AnswerPool","Object","assign","quizQuestions","imgSrc","name","question","a1","a2","a3","a4","ans","indexOf"],"sources":["/Users/markmanlimos/Desktop/info-340/info340app/src/components/QuizQuestions.js"],"sourcesContent":["import { random } from \"lodash\";\nimport { players } from \"./playerlist\"\n\nexport function generatePlayers(playerList) {\n    // grab 5 random players from playerlist\n    let randomPlayers = [];\n    for (let i = 0; i < 5; i++) {\n        randomPlayers.push(players[Math.floor(Math.random() * players.length)]);\n    }\n\n    // make an array of unique teams\n    const uniqueTeams = new Set();\n    players.forEach(player => {\n        const team = player['team'];\n        uniqueTeams.add(team);\n    })\n    const uniqueTeamsArray = Array.from(uniqueTeams);\n\n    // create a random answer pool for each player\n    function createAnswerPool(playerObj, teamArray) {\n        let answerPool = [];\n        answerPool.push(playerObj.team);\n        for (let i = 0; i < 3; i++) {\n            answerPool.push(teamArray[Math.floor(Math.random() * teamArray.length)]);\n        }\n\n        let currIndex = answerPool.length;\n\n        while (currIndex != 0) {\n            let randomIndex = Math.floor(Math.random() * currIndex);\n            currIndex--;\n\n            [answerPool[currIndex], answerPool[currIndex]] = [\n                answerPool[randomIndex], answerPool[currIndex]];\n        }\n\n        return answerPool;\n    }\n\n    const p1AnswerPool = createAnswerPool(randomPlayers[0], uniqueTeamsArray);\n    const p2AnswerPool = createAnswerPool(randomPlayers[1], uniqueTeamsArray);\n    const p3AnswerPool = createAnswerPool(randomPlayers[2], uniqueTeamsArray);\n    const p4AnswerPool = createAnswerPool(randomPlayers[3], uniqueTeamsArray);\n    const p5AnswerPool = createAnswerPool(randomPlayers[4], uniqueTeamsArray);\n\n\n    Object.assign(randomPlayers[0], { answerPool: p1AnswerPool });\n    Object.assign(randomPlayers[1], { answerPool: p2AnswerPool });\n    Object.assign(randomPlayers[2], { answerPool: p3AnswerPool });\n    Object.assign(randomPlayers[3], { answerPool: p4AnswerPool });\n    Object.assign(randomPlayers[4], { answerPool: p5AnswerPool });\n\n    return randomPlayers;\n}\n\nconst randomPlayers = generatePlayers({players})\n\nexport const quizQuestions = [\n    {\n        imgSrc: randomPlayers[0].imgSrc,\n        name: randomPlayers[0].name,\n        question: \"Which team does \" + randomPlayers[0].name + \" play for?\",\n        a1: randomPlayers[0].answerPool[0],\n        a2: randomPlayers[0].answerPool[1],\n        a3: randomPlayers[0].answerPool[2],\n        a4: randomPlayers[0].answerPool[3],\n        ans: randomPlayers[0].answerPool.indexOf(randomPlayers[0].team),\n    },\n    {\n        imgSrc: randomPlayers[1].imgSrc,\n        name: randomPlayers[1].name,\n        question: \"Which team does \" + randomPlayers[1].name + \" play for?\",\n        a1: randomPlayers[1].answerPool[0],\n        a2: randomPlayers[1].answerPool[1],\n        a3: randomPlayers[1].answerPool[2],\n        a4: randomPlayers[1].answerPool[3],\n        ans: randomPlayers[1].answerPool.indexOf(randomPlayers[1].team),\n    },\n    {\n        imgSrc: randomPlayers[2].imgSrc,\n        name: randomPlayers[2].name,\n        question: \"Which team does \" + randomPlayers[2].name + \" play for?\",\n        a1: randomPlayers[2].answerPool[0],\n        a2: randomPlayers[2].answerPool[1],\n        a3: randomPlayers[2].answerPool[2],\n        a4: randomPlayers[2].answerPool[3],\n        ans: randomPlayers[2].answerPool.indexOf(randomPlayers[2].team),\n    },\n    {\n        imgSrc: randomPlayers[3].imgSrc,\n        name: randomPlayers[3].name,\n        question: \"Which team does \" + randomPlayers[3].name + \" play for?\",\n        a1: randomPlayers[3].answerPool[0],\n        a2: randomPlayers[3].answerPool[1],\n        a3: randomPlayers[3].answerPool[2],\n        a4: randomPlayers[3].answerPool[3],\n        ans: randomPlayers[3].answerPool.indexOf(randomPlayers[3].team),\n    },\n    {\n        imgSrc: randomPlayers[4].imgSrc,\n        name: randomPlayers[4].name,\n        question: \"Which team does \" + randomPlayers[4].name + \" play for?\",\n        a1: randomPlayers[4].answerPool[0],\n        a2: randomPlayers[4].answerPool[1],\n        a3: randomPlayers[4].answerPool[2],\n        a4: randomPlayers[4].answerPool[3],\n        ans: randomPlayers[4].answerPool.indexOf(randomPlayers[4].team),\n    },\n]"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}