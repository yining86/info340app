{"ast":null,"code":"import{players}from\"./playerlist\";export function generatePlayers(playerList){// grab 5 random players from playerlist\nlet randomPlayers=[];for(let i=0;i<5;i++){randomPlayers.push(players[Math.floor(Math.random()*players.length)]);}// make an array of unique teams\nconst uniqueTeams=new Set();players.forEach(player=>{const team=player['team'];uniqueTeams.add(team);});const uniqueTeamsArray=Array.from(uniqueTeams);// create a random answer pool for each player\nfunction createAnswerPool(playerObj,teamArray){let answerPool=[];answerPool.push(playerObj.team);for(let i=0;i<3;i++){answerPool.push(teamArray[Math.floor(Math.random()*teamArray.length)]);}let currIndex=answerPool.length;while(currIndex!==0){let randomIndex=Math.floor(Math.random()*currIndex);currIndex--;[answerPool[currIndex],answerPool[randomIndex]]=[answerPool[randomIndex],answerPool[currIndex]];}return answerPool;}const p1AnswerPool=createAnswerPool(randomPlayers[0],uniqueTeamsArray);const p2AnswerPool=createAnswerPool(randomPlayers[1],uniqueTeamsArray);const p3AnswerPool=createAnswerPool(randomPlayers[2],uniqueTeamsArray);const p4AnswerPool=createAnswerPool(randomPlayers[3],uniqueTeamsArray);const p5AnswerPool=createAnswerPool(randomPlayers[4],uniqueTeamsArray);Object.assign(randomPlayers[0],{answerPool:p1AnswerPool});Object.assign(randomPlayers[1],{answerPool:p2AnswerPool});Object.assign(randomPlayers[2],{answerPool:p3AnswerPool});Object.assign(randomPlayers[3],{answerPool:p4AnswerPool});Object.assign(randomPlayers[4],{answerPool:p5AnswerPool});return randomPlayers;}const randomPlayers=generatePlayers({players});export const quizQuestions=[{imgSrc:randomPlayers[0].imgSrc,name:randomPlayers[0].name,question:\"Which team does \"+randomPlayers[0].name+\" play for?\",a1:randomPlayers[0].answerPool[0],a2:randomPlayers[0].answerPool[1],a3:randomPlayers[0].answerPool[2],a4:randomPlayers[0].answerPool[3],ans:randomPlayers[0].answerPool.indexOf(randomPlayers[0].team)},{imgSrc:randomPlayers[1].imgSrc,name:randomPlayers[1].name,question:\"Which team does \"+randomPlayers[1].name+\" play for?\",a1:randomPlayers[1].answerPool[0],a2:randomPlayers[1].answerPool[1],a3:randomPlayers[1].answerPool[2],a4:randomPlayers[1].answerPool[3],ans:randomPlayers[1].answerPool.indexOf(randomPlayers[1].team)},{imgSrc:randomPlayers[2].imgSrc,name:randomPlayers[2].name,question:\"Which team does \"+randomPlayers[2].name+\" play for?\",a1:randomPlayers[2].answerPool[0],a2:randomPlayers[2].answerPool[1],a3:randomPlayers[2].answerPool[2],a4:randomPlayers[2].answerPool[3],ans:randomPlayers[2].answerPool.indexOf(randomPlayers[2].team)},{imgSrc:randomPlayers[3].imgSrc,name:randomPlayers[3].name,question:\"Which team does \"+randomPlayers[3].name+\" play for?\",a1:randomPlayers[3].answerPool[0],a2:randomPlayers[3].answerPool[1],a3:randomPlayers[3].answerPool[2],a4:randomPlayers[3].answerPool[3],ans:randomPlayers[3].answerPool.indexOf(randomPlayers[3].team)},{imgSrc:randomPlayers[4].imgSrc,name:randomPlayers[4].name,question:\"Which team does \"+randomPlayers[4].name+\" play for?\",a1:randomPlayers[4].answerPool[0],a2:randomPlayers[4].answerPool[1],a3:randomPlayers[4].answerPool[2],a4:randomPlayers[4].answerPool[3],ans:randomPlayers[4].answerPool.indexOf(randomPlayers[4].team)}];","map":{"version":3,"names":["players","generatePlayers","playerList","randomPlayers","i","push","Math","floor","random","length","uniqueTeams","Set","forEach","player","team","add","uniqueTeamsArray","Array","from","createAnswerPool","playerObj","teamArray","answerPool","currIndex","randomIndex","p1AnswerPool","p2AnswerPool","p3AnswerPool","p4AnswerPool","p5AnswerPool","Object","assign","quizQuestions","imgSrc","name","question","a1","a2","a3","a4","ans","indexOf"],"sources":["C:/Users/skyne/Classes/INFO340/Group Project/info340app/src/components/QuizQuestions.js"],"sourcesContent":["import { players } from \"./playerlist\"\r\n\r\nexport function generatePlayers(playerList) {\r\n    // grab 5 random players from playerlist\r\n    let randomPlayers = [];\r\n    for (let i = 0; i < 5; i++) {\r\n        randomPlayers.push(players[Math.floor(Math.random() * players.length)]);\r\n    }\r\n\r\n    // make an array of unique teams\r\n    const uniqueTeams = new Set();\r\n    players.forEach(player => {\r\n        const team = player['team'];\r\n        uniqueTeams.add(team);\r\n    })\r\n    const uniqueTeamsArray = Array.from(uniqueTeams);\r\n\r\n    // create a random answer pool for each player\r\n    function createAnswerPool(playerObj, teamArray) {\r\n        let answerPool = [];\r\n        answerPool.push(playerObj.team);\r\n        for (let i = 0; i < 3; i++) {\r\n            answerPool.push(teamArray[Math.floor(Math.random() * teamArray.length)]);\r\n        }\r\n\r\n        let currIndex = answerPool.length;\r\n\r\n        while (currIndex !== 0) {\r\n            let randomIndex = Math.floor(Math.random() * currIndex);\r\n            currIndex--;\r\n\r\n            [answerPool[currIndex], answerPool[randomIndex]] = [\r\n                answerPool[randomIndex], answerPool[currIndex]];\r\n        }\r\n\r\n        return answerPool;\r\n    }\r\n\r\n    const p1AnswerPool = createAnswerPool(randomPlayers[0], uniqueTeamsArray);\r\n    const p2AnswerPool = createAnswerPool(randomPlayers[1], uniqueTeamsArray);\r\n    const p3AnswerPool = createAnswerPool(randomPlayers[2], uniqueTeamsArray);\r\n    const p4AnswerPool = createAnswerPool(randomPlayers[3], uniqueTeamsArray);\r\n    const p5AnswerPool = createAnswerPool(randomPlayers[4], uniqueTeamsArray);\r\n\r\n\r\n    Object.assign(randomPlayers[0], { answerPool: p1AnswerPool });\r\n    Object.assign(randomPlayers[1], { answerPool: p2AnswerPool });\r\n    Object.assign(randomPlayers[2], { answerPool: p3AnswerPool });\r\n    Object.assign(randomPlayers[3], { answerPool: p4AnswerPool });\r\n    Object.assign(randomPlayers[4], { answerPool: p5AnswerPool });\r\n\r\n    return randomPlayers;\r\n}\r\n\r\nconst randomPlayers = generatePlayers({players});\r\n\r\nexport const quizQuestions = [\r\n    {\r\n        imgSrc: randomPlayers[0].imgSrc,\r\n        name: randomPlayers[0].name,\r\n        question: \"Which team does \" + randomPlayers[0].name + \" play for?\",\r\n        a1: randomPlayers[0].answerPool[0],\r\n        a2: randomPlayers[0].answerPool[1],\r\n        a3: randomPlayers[0].answerPool[2],\r\n        a4: randomPlayers[0].answerPool[3],\r\n        ans: randomPlayers[0].answerPool.indexOf(randomPlayers[0].team),\r\n    },\r\n    {\r\n        imgSrc: randomPlayers[1].imgSrc,\r\n        name: randomPlayers[1].name,\r\n        question: \"Which team does \" + randomPlayers[1].name + \" play for?\",\r\n        a1: randomPlayers[1].answerPool[0],\r\n        a2: randomPlayers[1].answerPool[1],\r\n        a3: randomPlayers[1].answerPool[2],\r\n        a4: randomPlayers[1].answerPool[3],\r\n        ans: randomPlayers[1].answerPool.indexOf(randomPlayers[1].team),\r\n    },\r\n    {\r\n        imgSrc: randomPlayers[2].imgSrc,\r\n        name: randomPlayers[2].name,\r\n        question: \"Which team does \" + randomPlayers[2].name + \" play for?\",\r\n        a1: randomPlayers[2].answerPool[0],\r\n        a2: randomPlayers[2].answerPool[1],\r\n        a3: randomPlayers[2].answerPool[2],\r\n        a4: randomPlayers[2].answerPool[3],\r\n        ans: randomPlayers[2].answerPool.indexOf(randomPlayers[2].team),\r\n    },\r\n    {\r\n        imgSrc: randomPlayers[3].imgSrc,\r\n        name: randomPlayers[3].name,\r\n        question: \"Which team does \" + randomPlayers[3].name + \" play for?\",\r\n        a1: randomPlayers[3].answerPool[0],\r\n        a2: randomPlayers[3].answerPool[1],\r\n        a3: randomPlayers[3].answerPool[2],\r\n        a4: randomPlayers[3].answerPool[3],\r\n        ans: randomPlayers[3].answerPool.indexOf(randomPlayers[3].team),\r\n    },\r\n    {\r\n        imgSrc: randomPlayers[4].imgSrc,\r\n        name: randomPlayers[4].name,\r\n        question: \"Which team does \" + randomPlayers[4].name + \" play for?\",\r\n        a1: randomPlayers[4].answerPool[0],\r\n        a2: randomPlayers[4].answerPool[1],\r\n        a3: randomPlayers[4].answerPool[2],\r\n        a4: randomPlayers[4].answerPool[3],\r\n        ans: randomPlayers[4].answerPool.indexOf(randomPlayers[4].team),\r\n    },\r\n]"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}