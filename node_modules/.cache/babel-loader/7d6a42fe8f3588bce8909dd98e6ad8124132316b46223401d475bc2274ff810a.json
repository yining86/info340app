{"ast":null,"code":"var _jsxFileName = \"/Users/markmanlimos/Desktop/info-340/info340app/src/components/NewQuiz.js\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport { players } from './playerlist.js';\nimport { useState, useRef } from 'react';\nimport { quizQuestions } from './QuizQuestions.js';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport '../index.css';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport function NewQuiz(props) {\n  _s();\n  // set up states\n  let [index, setIndex] = useState(0);\n  let [question, setQuestion] = useState(quizQuestions[index]);\n  // stole this state function from YouTube\n  let [lock, setLock] = useState(false);\n  let [score, setScore] = useState(0);\n  let [final, setFinal] = useState(false);\n\n  // Took the references to change classList of li tag from Youtube\n  let ans1 = useRef(null);\n  let ans2 = useRef(null);\n  let ans3 = useRef(null);\n  let ans4 = useRef(null);\n  let aArray = [ans1, ans2, ans3, ans4];\n\n  // check answer function\n  const checkAnswer = (chosen, answer) => {\n    if (lock === false) {\n      if (question.ans === answer) {\n        chosen.target.classList.add(\"correct-answer\");\n        setLock(true);\n        setScore(score => score + 1);\n      } else {\n        chosen.target.classList.add(\"incorrect-answer\");\n        setLock(true);\n        aArray[question.ans].current.classList.add(\"correct-answer\");\n      }\n    }\n  };\n\n  // next question function\n  const nextQuestion = () => {\n    if (lock === true) {\n      if (index === quizQuestions.length - 1) {\n        setFinal(true);\n      } else {\n        setIndex(++index);\n        setQuestion(quizQuestions[index]);\n        setLock(false);\n        aArray.map(ans => {\n          ans.current.classList.remove(\"incorrect-answer\");\n          ans.current.classList.remove(\"correct-answer\");\n          return null;\n        });\n      }\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"body\", {\n    className: \"quizpage-body\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"quiz-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"NBA Player Quiz\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 17\n      }, this), result ? /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false) : /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 63,\n    columnNumber: 9\n  }, this);\n}\n_s(NewQuiz, \"Z6tVu8xyHC9f9bYas6fjYLLHaXY=\");\n_c = NewQuiz;\nvar _c;\n$RefreshReg$(_c, \"NewQuiz\");","map":{"version":3,"names":["React","players","useState","useRef","quizQuestions","jsxDEV","_jsxDEV","Fragment","_Fragment","NewQuiz","props","_s","index","setIndex","question","setQuestion","lock","setLock","score","setScore","final","setFinal","ans1","ans2","ans3","ans4","aArray","checkAnswer","chosen","answer","ans","target","classList","add","current","nextQuestion","length","map","remove","className","children","fileName","_jsxFileName","lineNumber","columnNumber","result","_c","$RefreshReg$"],"sources":["/Users/markmanlimos/Desktop/info-340/info340app/src/components/NewQuiz.js"],"sourcesContent":["import React from 'react';\nimport { players } from './playerlist.js';\nimport { useState, useRef } from 'react';\nimport { quizQuestions } from './QuizQuestions.js';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport '../index.css'\n\nexport function NewQuiz(props) {\n\n    // set up states\n    let [index, setIndex] = useState(0);\n    let [question, setQuestion] = useState(quizQuestions[index]);\n    // stole this state function from YouTube\n    let [lock, setLock] = useState(false);\n    let [score, setScore] = useState(0);\n    let [final, setFinal] = useState(false);\n\n    // Took the references to change classList of li tag from Youtube\n    let ans1 = useRef(null);\n    let ans2 = useRef(null);\n    let ans3 = useRef(null);\n    let ans4 = useRef(null);\n\n    let aArray = [ans1, ans2, ans3, ans4];\n\n    // check answer function\n    const checkAnswer = (chosen, answer) => {\n        if(lock === false) {\n            if(question.ans === answer){\n                chosen.target.classList.add(\"correct-answer\");\n                setLock(true);\n                setScore(score=>score+1)\n            }\n            else {\n                chosen.target.classList.add(\"incorrect-answer\");\n                setLock(true);\n                aArray[question.ans].current.classList.add(\"correct-answer\");\n            }\n        }\n    }\n\n    // next question function\n    const nextQuestion = () => {\n        if(lock === true){\n            if(index === quizQuestions.length - 1){\n                setFinal(true);\n            }\n            else{\n                setIndex(++index);\n                setQuestion(quizQuestions[index]);\n                setLock(false);\n                aArray.map((ans) => {\n                    ans.current.classList.remove(\"incorrect-answer\");\n                    ans.current.classList.remove(\"correct-answer\");\n                    return null;\n                })\n            }\n        }\n\n    }\n\n    return (\n        <body className='quizpage-body'>\n            <div className=\"quiz-container\">\n                <h1>NBA Player Quiz</h1>\n                <hr />\n                {result?<></> : <></>}\n                \n            </div>\n        </body>\n    )\n}"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,OAAO,QAAQ,iBAAiB;AACzC,SAASC,QAAQ,EAAEC,MAAM,QAAQ,OAAO;AACxC,SAASC,aAAa,QAAQ,oBAAoB;AAClD,OAAO,sCAAsC;AAC7C,OAAO,cAAc;AAAA,SAAAC,MAAA,IAAAC,OAAA,EAAAC,QAAA,IAAAC,SAAA;AAErB,OAAO,SAASC,OAAOA,CAACC,KAAK,EAAE;EAAAC,EAAA;EAE3B;EACA,IAAI,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGX,QAAQ,CAAC,CAAC,CAAC;EACnC,IAAI,CAACY,QAAQ,EAAEC,WAAW,CAAC,GAAGb,QAAQ,CAACE,aAAa,CAACQ,KAAK,CAAC,CAAC;EAC5D;EACA,IAAI,CAACI,IAAI,EAAEC,OAAO,CAAC,GAAGf,QAAQ,CAAC,KAAK,CAAC;EACrC,IAAI,CAACgB,KAAK,EAAEC,QAAQ,CAAC,GAAGjB,QAAQ,CAAC,CAAC,CAAC;EACnC,IAAI,CAACkB,KAAK,EAAEC,QAAQ,CAAC,GAAGnB,QAAQ,CAAC,KAAK,CAAC;;EAEvC;EACA,IAAIoB,IAAI,GAAGnB,MAAM,CAAC,IAAI,CAAC;EACvB,IAAIoB,IAAI,GAAGpB,MAAM,CAAC,IAAI,CAAC;EACvB,IAAIqB,IAAI,GAAGrB,MAAM,CAAC,IAAI,CAAC;EACvB,IAAIsB,IAAI,GAAGtB,MAAM,CAAC,IAAI,CAAC;EAEvB,IAAIuB,MAAM,GAAG,CAACJ,IAAI,EAAEC,IAAI,EAAEC,IAAI,EAAEC,IAAI,CAAC;;EAErC;EACA,MAAME,WAAW,GAAGA,CAACC,MAAM,EAAEC,MAAM,KAAK;IACpC,IAAGb,IAAI,KAAK,KAAK,EAAE;MACf,IAAGF,QAAQ,CAACgB,GAAG,KAAKD,MAAM,EAAC;QACvBD,MAAM,CAACG,MAAM,CAACC,SAAS,CAACC,GAAG,CAAC,gBAAgB,CAAC;QAC7ChB,OAAO,CAAC,IAAI,CAAC;QACbE,QAAQ,CAACD,KAAK,IAAEA,KAAK,GAAC,CAAC,CAAC;MAC5B,CAAC,MACI;QACDU,MAAM,CAACG,MAAM,CAACC,SAAS,CAACC,GAAG,CAAC,kBAAkB,CAAC;QAC/ChB,OAAO,CAAC,IAAI,CAAC;QACbS,MAAM,CAACZ,QAAQ,CAACgB,GAAG,CAAC,CAACI,OAAO,CAACF,SAAS,CAACC,GAAG,CAAC,gBAAgB,CAAC;MAChE;IACJ;EACJ,CAAC;;EAED;EACA,MAAME,YAAY,GAAGA,CAAA,KAAM;IACvB,IAAGnB,IAAI,KAAK,IAAI,EAAC;MACb,IAAGJ,KAAK,KAAKR,aAAa,CAACgC,MAAM,GAAG,CAAC,EAAC;QAClCf,QAAQ,CAAC,IAAI,CAAC;MAClB,CAAC,MACG;QACAR,QAAQ,CAAC,EAAED,KAAK,CAAC;QACjBG,WAAW,CAACX,aAAa,CAACQ,KAAK,CAAC,CAAC;QACjCK,OAAO,CAAC,KAAK,CAAC;QACdS,MAAM,CAACW,GAAG,CAAEP,GAAG,IAAK;UAChBA,GAAG,CAACI,OAAO,CAACF,SAAS,CAACM,MAAM,CAAC,kBAAkB,CAAC;UAChDR,GAAG,CAACI,OAAO,CAACF,SAAS,CAACM,MAAM,CAAC,gBAAgB,CAAC;UAC9C,OAAO,IAAI;QACf,CAAC,CAAC;MACN;IACJ;EAEJ,CAAC;EAED,oBACIhC,OAAA;IAAMiC,SAAS,EAAC,eAAe;IAAAC,QAAA,eAC3BlC,OAAA;MAAKiC,SAAS,EAAC,gBAAgB;MAAAC,QAAA,gBAC3BlC,OAAA;QAAAkC,QAAA,EAAI;MAAe;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eACxBtC,OAAA;QAAAmC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAK,CAAC,EACLC,MAAM,gBAACvC,OAAA,CAAAE,SAAA,mBAAI,CAAC,gBAAGF,OAAA,CAAAE,SAAA,mBAAI,CAAC;IAAA;MAAAiC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAEpB;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACJ,CAAC;AAEf;AAACjC,EAAA,CAhEeF,OAAO;AAAAqC,EAAA,GAAPrC,OAAO;AAAA,IAAAqC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}