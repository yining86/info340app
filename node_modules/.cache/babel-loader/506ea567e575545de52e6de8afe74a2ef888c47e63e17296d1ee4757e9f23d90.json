{"ast":null,"code":"var _jsxFileName = \"/Users/markmanlimos/Desktop/info-340/info340app/src/components/QuizPage.js\";\nimport React from 'react';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport { players } from './playerlist.js';\nimport { QuizCard } from './QuizCard.js';\nimport { NewQuiz } from './NewQuiz.js';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport function QuizPage(props) {\n  let randomPlayers = [];\n  for (let i = 0; i < 5; i++) {\n    randomPlayers.push(players[Math.floor(Math.random() * players.length)]);\n  }\n  const uniqueTeams = new Set();\n  props.players.forEach(pet => {\n    const breed = pet['breed'];\n    uniqueBreeds.add(breed);\n  });\n  const uniqueBreedsArray = Array.from(uniqueBreeds);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(QuizCard, {\n      players: randomPlayers\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 21,\n    columnNumber: 9\n  }, this);\n}\n_c = QuizPage;\nexport default QuizPage;\nvar _c;\n$RefreshReg$(_c, \"QuizPage\");","map":{"version":3,"names":["React","players","QuizCard","NewQuiz","jsxDEV","_jsxDEV","QuizPage","props","randomPlayers","i","push","Math","floor","random","length","uniqueTeams","Set","forEach","pet","breed","uniqueBreeds","add","uniqueBreedsArray","Array","from","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/markmanlimos/Desktop/info-340/info340app/src/components/QuizPage.js"],"sourcesContent":["import React from 'react';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport { players } from './playerlist.js';\nimport { QuizCard } from './QuizCard.js';\nimport { NewQuiz } from './NewQuiz.js';\n\nexport function QuizPage(props) {\n    let randomPlayers = [];\n    for (let i = 0; i < 5; i++) {\n        randomPlayers.push(players[Math.floor(Math.random() * players.length)]);\n    }\n\n    const uniqueTeams = new Set();\n    props.players.forEach(pet => {\n      const breed = pet['breed'];\n      uniqueBreeds.add(breed);\n    })\n    const uniqueBreedsArray = Array.from(uniqueBreeds);\n\n    return (\n        <div>\n            <QuizCard players={randomPlayers} />\n        </div>\n    );\n}\n\nexport default QuizPage;"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAO,sCAAsC;AAC7C,SAASC,OAAO,QAAQ,iBAAiB;AACzC,SAASC,QAAQ,QAAQ,eAAe;AACxC,SAASC,OAAO,QAAQ,cAAc;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEvC,OAAO,SAASC,QAAQA,CAACC,KAAK,EAAE;EAC5B,IAAIC,aAAa,GAAG,EAAE;EACtB,KAAK,IAAIC,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG,CAAC,EAAEA,CAAC,EAAE,EAAE;IACxBD,aAAa,CAACE,IAAI,CAACT,OAAO,CAACU,IAAI,CAACC,KAAK,CAACD,IAAI,CAACE,MAAM,CAAC,CAAC,GAAGZ,OAAO,CAACa,MAAM,CAAC,CAAC,CAAC;EAC3E;EAEA,MAAMC,WAAW,GAAG,IAAIC,GAAG,CAAC,CAAC;EAC7BT,KAAK,CAACN,OAAO,CAACgB,OAAO,CAACC,GAAG,IAAI;IAC3B,MAAMC,KAAK,GAAGD,GAAG,CAAC,OAAO,CAAC;IAC1BE,YAAY,CAACC,GAAG,CAACF,KAAK,CAAC;EACzB,CAAC,CAAC;EACF,MAAMG,iBAAiB,GAAGC,KAAK,CAACC,IAAI,CAACJ,YAAY,CAAC;EAElD,oBACIf,OAAA;IAAAoB,QAAA,eACIpB,OAAA,CAACH,QAAQ;MAACD,OAAO,EAAEO;IAAc;MAAAkB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACnC,CAAC;AAEd;AAACC,EAAA,GAlBexB,QAAQ;AAoBxB,eAAeA,QAAQ;AAAC,IAAAwB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}